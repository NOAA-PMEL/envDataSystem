# Generated by Django 2.2.1 on 2019-08-12 15:25

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('envtags', '0001_initial'),
        ('envcontacts', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='InstrumentDef',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('long_name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('length', models.CharField(blank=True, help_text='Enter dimensional length (m)', max_length=20, null=True)),
                ('width', models.CharField(blank=True, help_text='Enter dimensional width (m)', max_length=20, null=True)),
                ('height', models.CharField(blank=True, help_text='Enter dimensional height (m)', max_length=20, null=True)),
                ('weight', models.CharField(blank=True, help_text='Enter weight (kg)', max_length=20, null=True)),
                ('value', models.CharField(blank=True, help_text='Enter value (USD)', max_length=20, null=True)),
                ('model', models.CharField(help_text='Instrument model', max_length=50)),
                ('_class', models.CharField(blank=True, help_text='Enter class name', max_length=30, null=True)),
                ('_module', models.CharField(blank=True, help_text='Enter module name', max_length=100, null=True)),
                ('measurement_config', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='envtags.Configuration')),
                ('mfg', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='envcontacts.Organization')),
                ('tags', models.ManyToManyField(blank=True, related_name='inv_tags', to='envtags.Tag')),
                ('type', models.ForeignKey(blank=True, limit_choices_to={'type': 'INSTRUMENT_TYPE'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inst_type', to='envtags.Tag')),
            ],
            options={
                'verbose_name': 'Instrument Definition',
                'verbose_name_plural': 'Instrument Definitions ',
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(default=None, max_length=50, null=True)),
                ('uniqueID', models.UUIDField(blank=True, default=uuid.uuid1, editable=False, null=True)),
                ('serial_number', models.CharField(blank=True, default='NA', help_text='Enter serial number', max_length=30, null=True)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('IN_USE', 'In use'), ('ON_LOAN', 'Out on loan'), ('MAINTENANCE', 'Out for maintenance')], default='AVAILABLE', max_length=20)),
                ('contacts', models.ManyToManyField(blank=True, to='envcontacts.Person')),
                ('definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='envinventory.InstrumentDef')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='envcontacts.Organization')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
